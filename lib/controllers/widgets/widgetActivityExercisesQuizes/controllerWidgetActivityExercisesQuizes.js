// Generated by CoffeeScript 1.6.3
(function() {
  define(['text!views/widgetActivityExercisesQuizes/viewWidgetActivityExercisesQuizes.html'], function(viewWidgetActivityExercisesQuizes) {
    return function(Module) {
      Module.run([
        '$templateCache', function($templateCache) {
          return $templateCache.put('viewWidgetActivityExercisesQuizes', viewWidgetActivityExercisesQuizes);
        }
      ]);
      return Module.controller('ControllerWidgetActivityExercisesQuizes', [
        '$scope', '$templateCache', 'socket', 'apiRequest', function($scope, $templateCache, socket, apiRequest) {
          var viewModel;
          viewModel = {
            upcomingQuizesExercises: false,
            fetchUpcomingQuizesExercises: function() {
              return apiRequest.get('eventParticipant', [], {
                expand: [
                  {
                    resource: 'event'
                  }
                ],
                filter: [['employeeUid', '=', $scope.rootUser.uid]]
              }, function(response) {
                console.log('fetchUpcomingQuizesExercises response');
                console.log(response);
                if (response.code !== 200) {
                  return;
                }
                return viewModel.upcomingQuizesExercises = response.response.data;
              });
            }
          };
          viewModel.fetchUpcomingQuizesExercises();
          $scope.$on('resourcePost', function(e, data) {
            if ((data['resourceName'] === 'eventParticipant') || (data['resourceName'] === 'event')) {
              return setTimeout(function() {
                return $scope.viewModel.fetchUpcomingQuizesExercises();
              }, 1000);
            }
          });
          $scope.$on('resourcePut', function(e, data) {
            if ((data['resourceName'] === 'eventParticipant') || (data['resourceName'] === 'event')) {
              return setTimeout(function() {
                return $scope.viewModel.fetchUpcomingQuizesExercises();
              }, 1000);
            }
          });
          return $scope.viewModel = viewModel;
        }
      ]);
    };
  });

}).call(this);
