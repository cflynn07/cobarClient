// Generated by CoffeeScript 1.6.3
(function() {
  define(['app', 'underscore'], function(app, _) {
    return Module.controller('ControllerWidgetExerciseBuilderGroupEdit', [
      '$scope', '$routeParams', 'apiRequest', '$dialog', function($scope, $routeParams, apiRequest, $dialog) {
        var fieldTypes;
        fieldTypes = ['OpenResponse', 'SelectIndividual', 'SelectMultiple', 'YesNo', 'PercentageSlider'];
        return $scope.viewModel = {
          showAddNewField_OpenType: '',
          cancelAddNewField: function() {
            var type, _i, _len, _results;
            _results = [];
            for (_i = 0, _len = fieldTypes.length; _i < _len; _i++) {
              type = fieldTypes[_i];
              _results.push($scope.viewModel.showAddNewField_OpenType = '');
            }
            return _results;
          },
          moveGroup: function(dir) {
            var groupsLength, newOrdinal, _$scope;
            newOrdinal = $scope.group.ordinal;
            if (!$routeParams.revisionUid) {
              return;
            }
            groupsLength = _.filter(_.toArray($scope.resourcePool[$routeParams.revisionUid].groups), function(item) {
              return !item.deletedAt;
            }).length;
            if (dir === 'down') {
              newOrdinal++;
            } else {
              newOrdinal--;
            }
            if (newOrdinal < 0) {
              return;
            }
            if ((newOrdinal + 1) > groupsLength) {
              return;
            }
            _$scope = $scope;
            return helperReorderGroupOrdinals($scope, apiRequest, $scope.resourcePool[$routeParams.revisionUid].groups, newOrdinal, $scope.group.uid, function() {
              return apiRequest.put('group', [$scope.group.uid], {
                ordinal: newOrdinal
              }, {}, function(response) {
                return console.log(response);
              });
            });
          },
          deleteGroup: function(groupUid) {
            var btns, msg, title;
            title = 'Delete Dialog';
            msg = 'Dire Consequences...';
            btns = [
              {
                result: false,
                label: 'Cancel',
                cssClass: 'red'
              }, {
                result: true,
                label: 'Confirm',
                cssClass: 'green'
              }
            ];
            return $dialog.messageBox(title, msg, btns).open().then(function(result) {
              if (result) {
                return apiRequest["delete"]('group', [groupUid], {}, function(result) {
                  return helperReorderGroupOrdinals($scope, apiRequest, $scope.resourcePool[$routeParams.revisionUid].groups, _.toArray($scope.resourcePool[$routeParams.revisionUid].groups).length, false, function() {
                    return console.log('groups reindexed');
                  });
                });
              }
            });
          },
          putGroup: function(groupUid) {
            var btns, msg, name, title;
            console.log('groupUid');
            console.log(groupUid);
            name = $scope.resourcePool[groupUid].name;
            if ((name.length < $scope.clientOrmShare.group.model.name.validate.len[0]) || (name.length > $scope.clientOrmShare.group.model.name.validate.len[1])) {
              title = 'Invalid name';
              msg = 'Group name length must be between ' + $scope.clientOrmShare.group.model.name.validate.len[0] + ' and ' + $scope.clientOrmShare.group.model.name.validate.len[1] + ' characters';
              btns = [
                {
                  result: 'cancel',
                  label: 'Cancel',
                  cssClass: 'red'
                }, {
                  result: 'ok',
                  label: 'OK',
                  cssClass: 'green'
                }
              ];
              $dialog.messageBox(title, msg, btns).open().then(function(result) {
                if (result === 'cancel') {
                  return apiRequest.get('group', [groupUid], {}, function() {
                    return $scope.nameEditing = false;
                  });
                }
              });
              return true;
            } else {
              apiRequest.put('group', groupUid, {
                name: $scope.resourcePool[groupUid].name
              }, {}, function(response) {
                return console.log(response);
              });
              return false;
            }
          }
        };
      }
    ]);
  });

}).call(this);
