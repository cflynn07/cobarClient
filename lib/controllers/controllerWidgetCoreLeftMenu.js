// Generated by CoffeeScript 1.6.3
(function() {
  define(['app', 'jquery', 'underscore', 'text!views/widgetLeftMenu/viewWidgetCoreLeftMenu.html', 'text!views/widgetLeftMenu/viewWidgetCoreLeftMenuOptionsAdmin.html', 'text!views/widgetLeftMenu/viewWidgetCoreLeftMenuOptionsDelegate.html', 'config/clientConfig'], function(app, $, _, viewWidgetCoreLeftMenu, viewWidgetCoreLeftMenuOptionsAdmin, viewWidgetCoreLeftMenuOptionsDelegate, clientConfig) {
    app.run([
      '$templateCache', function($templateCache) {
        $templateCache.put('viewWidgetCoreLeftMenu', viewWidgetCoreLeftMenu);
        $templateCache.put('viewWidgetCoreLeftMenuOptionsAdmin', viewWidgetCoreLeftMenuOptionsAdmin);
        return $templateCache.put('viewWidgetCoreLeftMenuOptionsDelegate', viewWidgetCoreLeftMenuOptionsDelegate);
      }
    ]);
    return app.controller('ControllerWidgetCoreLeftMenu', [
      '$scope', '$rootScope', '$route', '$templateCache', '$location', function($scope, $rootScope, $route, $templateCache, $location) {
        if ($scope.quizMode) {
          return false;
        }
        $rootScope.sidebarClosedToggle = function() {
          return $rootScope.sidebarClosed = !$rootScope.sidebarClosed;
        };
        $scope.menuChoices = [];
        $scope.currentActiveMenuItem = '';
        $scope.setCurrentActiveMenuItem = function(item) {
          if ($scope.currentActiveMenuItem === item) {
            return $scope.currentActiveMenuItem = '';
          } else {
            return $scope.currentActiveMenuItem = item;
          }
        };
        $scope.getClass = function(menuTitle, isTop) {
          var className;
          className = '';
          if (isTop) {
            if ($scope.activeMenuItem.indexOf(menuTitle) === 0) {
              return className = 'active';
            }
          }
        };
        $scope.updateActiveMenuItem = function() {
          return $scope.locationHash = $location.$$path;
          /*
          $scope.activeMenuItem    = ''
          #$scope.activeSubMenuItem = ''
          if !_.isUndefined($route.current) and !_.isUndefined($route.current.pathValue)
            $scope.activeMenuItem = $route.current.pathValue.title
            $scope.locationHash   = $location.$$path
            #console.log '$location.$$path'
            #console.log $location.$$path
          */

        };
        $scope.$on('$routeChangeSuccess', function(scope, current, previous) {
          return $scope.updateActiveMenuItem();
        });
        return $scope.updateActiveMenuItem();
      }
    ]);
  });

}).call(this);
