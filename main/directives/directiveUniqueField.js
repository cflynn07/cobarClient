// Generated by CoffeeScript 1.6.3
(function() {
  define(['app'], function(app) {
    return app.directive('uniqueField', [
      'apiRequest', function(apiRequest) {
        var directive;
        return directive = {
          restrict: 'A',
          require: 'ngModel',
          scope: true,
          link: function(scope, elm, attrs, ctrl) {
            var attrData, checkDuplicates, isPristine;
            ctrl.$setValidity('uniqueField', true);
            attrData = JSON.parse(attrs.uniqueField);
            isPristine = ctrl.$pristine;
            checkDuplicates = function(viewValue) {
              var uids;
              if (viewValue) {
                if (isPristine) {
                  isPristine = ctrl.$pristine;
                  return viewValue;
                }
                uids = [];
                if (attrData.uids) {
                  if (!_.isArray(attrData.uids)) {
                    uids = [attrData.uids];
                  } else {
                    uids = attrData.uids;
                  }
                }
                apiRequest.get(attrData.resource, uids, {}, function(response) {
                  var isValid, obj, obj2, uid, uid2, _ref, _ref1;
                  isValid = true;
                  if (response.code === 200) {
                    _ref = response.response;
                    for (uid in _ref) {
                      obj = _ref[uid];
                      if (attrData.subProperty) {
                        if (obj[attrData.property]) {
                          _ref1 = obj[attrData.property];
                          for (uid2 in _ref1) {
                            obj2 = _ref1[uid2];
                            if (obj2[attrs.subProperty].toLowerCase() === viewValue.toLowerCase() && !obj2[attrs.subProperty].deletedAt) {
                              isValid = false;
                              break;
                            }
                          }
                        }
                      } else {
                        if (_.isString(obj[attrData.property]) && _.isString(viewValue)) {
                          if (obj[attrData.property].toLowerCase() === viewValue.toLowerCase() && !obj.deletedAt) {
                            isValid = false;
                            break;
                          }
                        }
                      }
                    }
                    return ctrl.$setValidity('uniqueField', isValid);
                  } else {
                    return ctrl.$setValidity('uniqueField', true);
                  }
                });
              } else {
                ctrl.$setValidity('uniqueField', true);
              }
              return viewValue;
            };
            ctrl.$formatters.unshift(function(viewValue) {
              return checkDuplicates(viewValue);
            });
            return ctrl.$parsers.unshift(function(viewValue) {
              return checkDuplicates(viewValue);
            });
          }
        };
      }
    ]);
  });

}).call(this);
